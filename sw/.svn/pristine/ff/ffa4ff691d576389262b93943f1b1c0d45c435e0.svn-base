C51 COMPILER V9.01   RAM                                                                   11/24/2016 19:46:48 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE RAM
OBJECT MODULE PLACED IN output/ram.obj
COMPILER INVOKED BY: C:\Keil51\c51\bin\C51.exe ram.c OBJECT(output/ram.obj) OBJECTADVANCED BROWSE DF(ENABLE_APE) PR(outp
                    -ut/ram.lst) OT(7,SPEED) LARGE

line level    source

   1          #include <reg320.h>
   2          #include <string.h>
   3          #include "hwreg.h"
   4          #include "YC_Define.h"
   5          
   6          #define UPPER_DATA                      1 
   7          #define UPPER_REPLY                     2 
   8          
   9          #define LOWER_SPEAKER_MUTE      4 
  10          #define LOWER_SPEAKER_ENABLE    8 
  11          #define LOWER_READ                      0x10 
  12          #define LOWER_ACK                       0x20
  13          #define LOWER_WAITACK                   0x40
  14          #define LOWER_WRITE                     0x80    
  15          
  16          #define                 TICK_COUNTER            500
  17          
  18          
  19          void soft_reset();
  20          void YC_GPIOSetBit(u8_t gpio_num, char *reg_base, bool bit_val);
  21          
  22          
  23          void main()
  24          {
  25   1              soft_reset();
  26   1      }
  27          
  28          
  29          #define RESET_MAX_CNT                           4000   // 2.7us per cnt
  30          #define RESET_GPIO_NUM                          5
  31          #define RESET_GPIO_LEVEL                        0
  32          #define RESET_GPIO_GROUP                        (RESET_GPIO_NUM/8) 
  33          #define RESET_GPIO_BIT                          (RESET_GPIO_NUM%8) 
  34          #define RESET_GPIO_BIT_MASK             BIT( RESET_GPIO_BIT)
  35          #define RESET_GPIO_DATA                         (RESET_GPIO_LEVEL<<RESET_GPIO_BIT)
  36          #define RESET_GPIO_IN_BASE                      (0x811c)
  37          #define RESET_GPIO_IN_REG                       (RESET_GPIO_IN_BASE + RESET_GPIO_GROUP)
  38          
  39          void YC_GPIOSetPullup(u8_t gpio_num)
  40          {
  41   1              YC_GPIOSetBit(gpio_num, &REG_GPIO_PUP(0), 1);   
  42   1      }
  43          
  44          void YC_GPIOSetBit(u8_t gpio_num, char *reg_base, bool bit_val)
  45          {
  46   1              u8_t queue, group;
  47   1      
  48   1              queue = (gpio_num & 7);
  49   1              group = gpio_num >> 3 & 3;
  50   1      
  51   1              if(bit_val)
  52   1              {
  53   2                      *(reg_base + group) |= 1<<queue;
  54   2              }
C51 COMPILER V9.01   RAM                                                                   11/24/2016 19:46:48 PAGE 2   

  55   1              else
  56   1              {
  57   2                      *(reg_base + group) &= ~(1<<queue);
  58   2              }
  59   1      }
  60          
  61          void soft_reset(){
  62   1      
  63   1              uint i = 0;
  64   1              YC_GPIOSetPullup(RESET_GPIO_NUM);
  65   1              while(1){
  66   2                      
  67   2              for(i = 0; i < RESET_MAX_CNT; i ++){
  68   3                      if(RESET_GPIO_DATA != (HREAD(RESET_GPIO_IN_REG) & RESET_GPIO_BIT_MASK)){
  69   4                              break;
  70   4                      }
  71   3              }
  72   2              
  73   2              if(RESET_MAX_CNT == i){
  74   3                              HWRITE(0x8010, 1);  // hjam 1,0x8010
  75   3                      }
  76   2              }       
  77   1              
  78   1      }
  79          
  80          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    208    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       5
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
