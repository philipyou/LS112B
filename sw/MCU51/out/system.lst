C51 COMPILER V9.01   SYSTEM                                                                04/20/2017 16:55:01 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE SYSTEM
OBJECT MODULE PLACED IN out/system.obj
COMPILER INVOKED BY: C:\Keil\c51\bin\C51.exe system.c OBJECT(out/system.obj) OBJECTADVANCED OPTIMIZE(9,SPEED) BROWSE COD
                    -E SYMBOLS DF(ENABLE_APE) PR(out/system.lst) OT(7,SPEED) LARGE

line level    source

   1          #include "system.h"
   2          #include "YC_Define.h"
   3          #include "hwreg.h"
   4          #include "YC_SYS.h"
   5          #include "YC_Utilities.h"
   6          #include "YC_Peripheral.h"
   7          #include "btreg.h"
   8          #include "BT_IPC.h"
   9          //#include "wechat.h"
  10          #include "CS_Scale_Proc.h"
  11          #include "CS_CommTo1186.h"
  12          #include "CS_ScaleDisplay.h"
  13          #include "retation_variable.h"
  14          
  15          #include "spiflash.h"
  16          #include "lxProtocol.h"
  17          
  18          u8_t xdata SoftTimer_1STimerID;
  19          u8_t xdata SoftTimer_10msTimerID;
  20          #if 0
              void SoftTimer_1SCallback(void)
              {
                      u8_t buf[10] = {0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88, 0x99, 0x00};
                      //YC_UARTSendData(buf, 10);
                      YC_UtilTimerStart(1, SoftTimer_1SCallback, &SoftTimer_1STimerID);
                      //add user function
                      
                      UTCTime++;
              
                      /*
                      R_Debug_temp = 1234;
                      CS_ScaleDisplay_Debug();
                      
                      */
                      
              /*
                      SPIFlashInit();
                      SPIFlashEraseSector(0x8000);
                      SPIFlashWrite(buf,0x8000,10);
                      SPIFlashRead(SF_RX_BUF,0x8000,10);      
                      */
              }
              #endif
  44          void SoftTimer_10mSCallback(void)
  45          {
  46   1              static u8_t count;
  47   1              YC_UtilTimerStartMs(10, SoftTimer_10mSCallback, &SoftTimer_10msTimerID);
  48   1              //add user function
  49   1              if(uartTimeoutCnt<255) {
  50   2                      uartTimeoutCnt++;
  51   2              }
  52   1      
  53   1      
  54   1              if(count<100)
C51 COMPILER V9.01   SYSTEM                                                                04/20/2017 16:55:01 PAGE 2   

  55   1                      count++;
  56   1              else
  57   1                      {
  58   2                      count=0;
  59   2                      CS_Scale_TimeOutProc(CS_SetTimeBase1S);
  60   2                      CS_MemoryWeightClear_Timer(MemWeightTimerInc);
  61   2                      }
  62   1                      
  63   1              CS_SoftTimer(SoftTimerInc);
  64   1      
  65   1              CS_KeyScan();
  66   1      
  67   1      }
  68          
  69          void systemInit(void)
  70          {
  71   1              LPM_DISABLE();
  72   1              if(*mem_poweron_flag == CS_POWERON_FLAG         //poweron or reset
  73   1              /*|| *mem_poweron_flag == CS_IOWAKE_FLAG*/) {           //iowake from sleep
  74   2                      sys_state = SYS_ST_RUN;
  75   2                      R_Scale_state = CS_Scale_state_init;
  76   2      
  77   2                      QueueInit();
  78   2                      //read spiflash data,save to buffer
  79   2                      SpiFlashOperator(CS_CMD_READ_FLASH);
  80   2                      bleConnStatus = BLE_STATUS_DISCONN;
  81   2                      if(deviceInfo.registerFlag != DEVICE_REGISTERED)
  82   2                      {
  83   3                              xmemset(mem_register_buf, 0, sizeof(deviceInfo));
  84   3                      }
  85   2                      *(mem_le_adv_data + 13) = deviceInfo.registerFlag;
  86   2                              
  87   2                      YC_UtilTimerInit();
  88   2                      //YC_UtilTimerStart(1, SoftTimer_1SCallback, &SoftTimer_1STimerID);
  89   2                      YC_UtilTimerStartMs(10, SoftTimer_10mSCallback, &SoftTimer_10msTimerID);
  90   2                      CS_Scale_PowerOn();     
  91   2                      
  92   2              }
  93   1              else {  //wake from LPM mode
  94   2                      if(YC_GPIOGetInputStatus(5) == 0 ||     //GPIO5, key is  down   
  95   2                      YC_GPIOGetInputStatus(27) == 0) {       //GPIO27, scale wakeup
  96   3                              sys_state = SYS_ST_RUN;
  97   3                              R_Scale_state = CS_Scale_state_standby;
  98   3                              YC_UtilTimerInit();
  99   3                              //YC_UtilTimerStart(1, SoftTimer_1SCallback, &SoftTimer_1STimerID);
 100   3                              YC_UtilTimerStartMs(10, SoftTimer_10mSCallback, &SoftTimer_10msTimerID);
 101   3                              //CS_Scale_PowerOn();   
 102   3      
 103   3                              //R_Debug_temp=R_Scale_state;
 104   3                              //CS_ScaleDisplay_Debug();
 105   3                              //while(1);
 106   3                      }
 107   2                      else {  //remote bluetooth wakeup
 108   3                              sys_state = SYS_ST_IDLE;
 109   3                      }
 110   2              }
 111   1              *mem_poweron_flag = CS_NULL_FLAG;
 112   1      }
 113          
 114          u8_t generateChecksum(u8_t *buf,u8_t len)
 115          {
 116   1              u8_t result;
C51 COMPILER V9.01   SYSTEM                                                                04/20/2017 16:55:01 PAGE 3   

 117   1              result = 0;
 118   1              while(len--) {
 119   2                      result^=*buf++;
 120   2              }
 121   1              return result;
 122   1      }
 123          
 124          void BTControlProcess(void)
 125          {
 126   1              BT_EVENTFIFO_t event;
 127   1              //normal process
 128   1              BT_EventFifoOut(&event);
 129   1              if(event.len != 0)
 130   1              {
 131   2                      //YC_UARTSendData(event.DATA, event.len);
 132   2                      switch(event.DATA[0]) {
 133   3                              case CS_NOTIFY_POWERON:
 134   3                                      break;
 135   3                              case CS_NOTIFY_DISC:            //bluetooth disconnect
 136   3                                      notifyValueUUIDA621 = NOTIFY_INDICATE_DISABLE;
 137   3                                      notifyValueUUIDA625 = NOTIFY_INDICATE_DISABLE;
 138   3                                      bleConnStatus= BLE_STATUS_DISCONN;
 139   3                                      break;
 140   3                              case CS_NOTIFY_CONN:    //bluetooth connected
 141   3                                      lxOptStatus = OPT_IDLE;
 142   3                                      bleConnStatus= BLE_STATUS_CONN;
 143   3                                      break;
 144   3                              case CS_NOTIFY_DATA:    //receive data
 145   3                                      lxRecvDataFromApp(&event);
 146   3                                      break; 
 147   3                              case CS_NOTIFY_OPENHANDLE:
 148   3                                      if(event.DATA[1] == HANDLE_UUIDA621_NOTIFY)
 149   3                                      {
 150   4                                              notifyValueUUIDA621 = event.DATA[3];
 151   4                                      }
 152   3                                      else if(event.DATA[1] == HANDLE_UUIDA625_NOTIFY)
 153   3                                      {
 154   4                                              notifyValueUUIDA625 = event.DATA[3];
 155   4                                      }
 156   3      
 157   3                                      if(*mem_register_buf == DEVICE_REGISTERED &&
 158   3                                              notifyValueUUIDA621 == NOTIFY_ENABLE &&
 159   3                                              notifyValueUUIDA625 == NOTIFY_ENABLE)
 160   3                                      {
 161   4                                              lxOptStatus = OPT_LOGIN_REQ;
 162   4                                      }
 163   3                                      break;
 164   3                              case CS_NOTIFY_READ_REQ:
 165   3                                      break;
 166   3                              case CS_NOTIFY_INDICATE_CONFIRM:
 167   3                                      handleIndicationConfirm = 1;
 168   3                                      break;
 169   3                      }
 170   2              }
 171   1      }
 172          
 173          
 174          void SysStatusProcess(void) 
 175          {
 176   1              if( sys_state == SYS_ST_IDLE) { //can enter LPM
 177   2                      if(bleConnStatus ==BLE_STATUS_DISCONN)
 178   2                      {
C51 COMPILER V9.01   SYSTEM                                                                04/20/2017 16:55:01 PAGE 4   

 179   3                              YC_UARTWaitSendData();
 180   3                              YC_UARTClearBuffer();
 181   3                              LPM_ENABLE();
 182   3      
 183   3                              btCmdBuf.len = 0x01;
 184   3                              btCmdBuf.DATA[0] = CS_CMD_SLEEP_REQ;
 185   3                              BT_CmdFifoIn(&btCmdBuf);
 186   3      
 187   3                                      
 188   3                      }
 189   2              }
 190   1              else if( sys_state == SYS_ST_SLEEP) {//can enter LPM
 191   2                      YC_UARTWaitSendData();
 192   2                      YC_UARTClearBuffer();
 193   2                      LPM_ENABLE();
 194   2              } 
 195   1              else {
 196   2                      LPM_DISABLE();
 197   2              }
 198   1      }
 199          
C51 COMPILER V9.01   SYSTEM                                                                04/20/2017 16:55:01 PAGE 5   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION SoftTimer_10mSCallback (BEGIN)
                                           ; SOURCE LINE # 44
                                           ; SOURCE LINE # 45
                                           ; SOURCE LINE # 47
                       MOV     R3,#0FFH
                 R     MOV     R2,#HIGH SoftTimer_10mSCallback
                 R     MOV     R1,#LOW SoftTimer_10mSCallback
                 E     MOV     DPTR,#?_YC_UtilTimerStartMs?BYTE+05H
                 R     MOV     A,#HIGH SoftTimer_10msTimerID
                       MOVX    @DPTR,A
                       INC     DPTR
                 R     MOV     A,#LOW SoftTimer_10msTimerID
                       MOVX    @DPTR,A
                       MOV     R7,#0AH
                       MOV     R6,#00H
                 E     CALL    _YC_UtilTimerStartMs
                                           ; SOURCE LINE # 49
                 E     MOV     DPTR,#uartTimeoutCnt
                       MOVX    A,@DPTR
                       CLR     C
                       SUBB    A,#0FFH
                 R     xJGE    ?C0001
                                           ; SOURCE LINE # 50
                       MOVX    A,@DPTR
                       INC     A
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 51
             ?C0001:
                                           ; SOURCE LINE # 54
                 R     MOV     DPTR,#count
                       MOVX    A,@DPTR
                       CLR     C
                       SUBB    A,#064H
                 R     xJGE    ?C0002
                                           ; SOURCE LINE # 55
                       MOVX    A,@DPTR
                       INC     A
                       MOVX    @DPTR,A
                 R     xJMP    ?C0003
             ?C0002:
                                           ; SOURCE LINE # 57
                                           ; SOURCE LINE # 58
                       CLR     A
                 R     MOV     DPTR,#count
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 59
                       MOV     R7,#07H
                 E     CALL    _CS_Scale_TimeOutProc
                                           ; SOURCE LINE # 60
                       MOV     R7,#02H
                 E     CALL    _CS_MemoryWeightClear_Timer
                                           ; SOURCE LINE # 61
             ?C0003:
                                           ; SOURCE LINE # 63
                       CLR     A
                       MOV     R7,A
                 E     CALL    _CS_SoftTimer
                                           ; SOURCE LINE # 65
                 E     CALL    CS_KeyScan
C51 COMPILER V9.01   SYSTEM                                                                04/20/2017 16:55:01 PAGE 6   

                                           ; SOURCE LINE # 67
                       RET     
             ; FUNCTION SoftTimer_10mSCallback (END)

             ; FUNCTION systemInit (BEGIN)
                                           ; SOURCE LINE # 69
                                           ; SOURCE LINE # 70
                                           ; SOURCE LINE # 71
                       MOV     DPTR,#049FEH
                       CLR     A
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 72
                       MOV     DPTR,#049FCH
                       MOVX    A,@DPTR
                       XRL     A,#010H
                 R     xJNZ    ?C0005
                                           ; SOURCE LINE # 73
                                           ; SOURCE LINE # 74
                 E     MOV     DPTR,#sys_state
                       MOV     A,#02H
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 75
                       CLR     A
                 E     MOV     DPTR,#R_Scale_state
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 77
                 E     CALL    QueueInit
                                           ; SOURCE LINE # 79
                       MOV     R7,#040H
                 E     CALL    _SpiFlashOperator
                                           ; SOURCE LINE # 80
                       CLR     A
                 E     MOV     DPTR,#bleConnStatus
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 81
                 E     MOV     DPTR,#deviceInfo
                       MOVX    A,@DPTR
                       XRL     A,#01H
                 R     xJZ     ?C0006
                                           ; SOURCE LINE # 82
                                           ; SOURCE LINE # 83
                       MOV     R3,#0AH
                       CLR     A
                       MOV     R5,A
                       MOV     R7,#0EH
                       MOV     R6,#04CH
                 E     CALL    _xmemset
                                           ; SOURCE LINE # 84
             ?C0006:
                                           ; SOURCE LINE # 85
                 E     MOV     DPTR,#deviceInfo
                       MOVX    A,@DPTR
                       MOV     DPTR,#043E7H
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 87
                 E     CALL    YC_UtilTimerInit
                                           ; SOURCE LINE # 89
                       MOV     R3,#0FFH
                 R     MOV     R2,#HIGH SoftTimer_10mSCallback
                 R     MOV     R1,#LOW SoftTimer_10mSCallback
                 E     MOV     DPTR,#?_YC_UtilTimerStartMs?BYTE+05H
                 R     MOV     A,#HIGH SoftTimer_10msTimerID
C51 COMPILER V9.01   SYSTEM                                                                04/20/2017 16:55:01 PAGE 7   

                       MOVX    @DPTR,A
                       INC     DPTR
                 R     MOV     A,#LOW SoftTimer_10msTimerID
                       MOVX    @DPTR,A
                       MOV     R7,#0AH
                       MOV     R6,#00H
                 E     CALL    _YC_UtilTimerStartMs
                                           ; SOURCE LINE # 90
                 E     CALL    CS_Scale_PowerOn
                                           ; SOURCE LINE # 92
                 R     xJMP    ?C0007
             ?C0005:
                                           ; SOURCE LINE # 93
                                           ; SOURCE LINE # 94
                       MOV     R7,#05H
                 E     CALL    _YC_GPIOGetInputStatus
                 R     xJNC    ?C0009
                       MOV     R7,#01BH
                 E     CALL    _YC_GPIOGetInputStatus
                 R     xJC     ?C0008
             ?C0009:
                                           ; SOURCE LINE # 95
                                           ; SOURCE LINE # 96
                 E     MOV     DPTR,#sys_state
                       MOV     A,#02H
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 97
                 E     MOV     DPTR,#R_Scale_state
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 98
                 E     CALL    YC_UtilTimerInit
                                           ; SOURCE LINE # 100
                       MOV     R3,#0FFH
                 R     MOV     R2,#HIGH SoftTimer_10mSCallback
                 R     MOV     R1,#LOW SoftTimer_10mSCallback
                 E     MOV     DPTR,#?_YC_UtilTimerStartMs?BYTE+05H
                 R     MOV     A,#HIGH SoftTimer_10msTimerID
                       MOVX    @DPTR,A
                       INC     DPTR
                 R     MOV     A,#LOW SoftTimer_10msTimerID
                       MOVX    @DPTR,A
                       MOV     R7,#0AH
                       MOV     R6,#00H
                 E     CALL    _YC_UtilTimerStartMs
                                           ; SOURCE LINE # 106
                 R     xJMP    ?C0007
             ?C0008:
                                           ; SOURCE LINE # 107
                                           ; SOURCE LINE # 108
                 E     MOV     DPTR,#sys_state
                       MOV     A,#01H
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 109
                                           ; SOURCE LINE # 110
             ?C0007:
                                           ; SOURCE LINE # 111
                       MOV     DPTR,#049FCH
                       CLR     A
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 112
                       RET     
             ; FUNCTION systemInit (END)
C51 COMPILER V9.01   SYSTEM                                                                04/20/2017 16:55:01 PAGE 8   


             ; FUNCTION _generateChecksum (BEGIN)
                                           ; SOURCE LINE # 114
                 R     MOV     DPTR,#buf
                       MOV     A,R3
                       MOVX    @DPTR,A
                       INC     DPTR
                       MOV     A,R2
                       MOVX    @DPTR,A
                       INC     DPTR
                       MOV     A,R1
                       MOVX    @DPTR,A
;---- Variable 'len' assigned to Register 'R5' ----
                                           ; SOURCE LINE # 115
                                           ; SOURCE LINE # 117
;---- Variable 'result' assigned to Register 'R7' ----
                       CLR     A
                       MOV     R7,A
             ?C0012:
                                           ; SOURCE LINE # 118
                       MOV     R6,AR5
                       DEC     R5
                       MOV     A,R6
                 R     xJZ     ?C0013
                                           ; SOURCE LINE # 119
                 R     MOV     DPTR,#buf
                       MOVX    A,@DPTR
                       MOV     R3,A
                       INC     DPTR
                       CLR     A
                       MOV     B,#01H
                 E     CALL    ?C?ILDIX
                       MOV     R1,B
                       MOV     R2,A
                 E     CALL    ?C?CLDPTR
                       XRL     A,R7
                       MOV     R7,A
                                           ; SOURCE LINE # 120
                 R     xJMP    ?C0012
             ?C0013:
                                           ; SOURCE LINE # 121
                                           ; SOURCE LINE # 122
             ?C0014:
                       RET     
             ; FUNCTION _generateChecksum (END)

             ; FUNCTION BTControlProcess (BEGIN)
                                           ; SOURCE LINE # 124
                                           ; SOURCE LINE # 125
                                           ; SOURCE LINE # 128
                       MOV     R3,#01H
                 R     MOV     R2,#HIGH event
                 R     MOV     R1,#LOW event
                 E     CALL    _BT_EventFifoOut
                                           ; SOURCE LINE # 129
                 R     MOV     DPTR,#event
                       MOVX    A,@DPTR
                 R     xJZ     ?C0028
                                           ; SOURCE LINE # 130
                                           ; SOURCE LINE # 132
                       INC     DPTR
                       MOVX    A,@DPTR
C51 COMPILER V9.01   SYSTEM                                                                04/20/2017 16:55:01 PAGE 9   

                       ADD     A,#0EEH
                 R     xJZ     ?C0019
                       DEC     A
                 R     xJZ     ?C0020
                       DEC     A
                 R     xJZ     ?C0021
                       ADD     A,#0FCH
                 R     xJZ     ?C0027
                       ADD     A,#07H
                 R     xJNZ    ?C0028
                                           ; SOURCE LINE # 133
                                           ; SOURCE LINE # 134
                                           ; SOURCE LINE # 135
             ?C0018:
                                           ; SOURCE LINE # 136
                       CLR     A
                 E     MOV     DPTR,#notifyValueUUIDA621
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 137
                 E     MOV     DPTR,#notifyValueUUIDA625
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 138
                 E     MOV     DPTR,#bleConnStatus
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 139
                       RET     
                                           ; SOURCE LINE # 140
             ?C0019:
                                           ; SOURCE LINE # 141
                       CLR     A
                 E     MOV     DPTR,#lxOptStatus
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 142
                 E     MOV     DPTR,#bleConnStatus
                       INC     A
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 143
                       RET     
                                           ; SOURCE LINE # 144
             ?C0020:
                                           ; SOURCE LINE # 145
                       MOV     R3,#01H
                 R     MOV     R2,#HIGH event
                 R     MOV     R1,#LOW event
                 E     CALL    _lxRecvDataFromApp
                                           ; SOURCE LINE # 146
                       RET     
                                           ; SOURCE LINE # 147
             ?C0021:
                                           ; SOURCE LINE # 148
                 R     MOV     DPTR,#event+02H
                       MOVX    A,@DPTR
                       MOV     R7,A
                 R     xJNE    A,#01CH,?C0022
                                           ; SOURCE LINE # 149
                                           ; SOURCE LINE # 150
                 R     MOV     DPTR,#event+04H
                       MOVX    A,@DPTR
                 E     MOV     DPTR,#notifyValueUUIDA621
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 151
                 R     xJMP    ?C0023
C51 COMPILER V9.01   SYSTEM                                                                04/20/2017 16:55:01 PAGE 10  

             ?C0022:
                                           ; SOURCE LINE # 152
                       MOV     A,R7
                 R     xJNE    A,#025H,?C0023
                                           ; SOURCE LINE # 153
                                           ; SOURCE LINE # 154
                 R     MOV     DPTR,#event+04H
                       MOVX    A,@DPTR
                 E     MOV     DPTR,#notifyValueUUIDA625
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 155
             ?C0023:
                                           ; SOURCE LINE # 157
                       MOV     DPTR,#04C0EH
                       MOVX    A,@DPTR
                 R     xJNE    A,#01H,?C0028
                 E     MOV     DPTR,#notifyValueUUIDA621
                       MOVX    A,@DPTR
                 R     xJNE    A,#01H,?C0028
                 E     MOV     DPTR,#notifyValueUUIDA625
                       MOVX    A,@DPTR
                 R     xJNE    A,#01H,?C0028
                                           ; SOURCE LINE # 160
                                           ; SOURCE LINE # 161
                 E     MOV     DPTR,#lxOptStatus
                       MOV     A,#016H
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 162
                                           ; SOURCE LINE # 163
                       RET     
                                           ; SOURCE LINE # 164
                                           ; SOURCE LINE # 165
                                           ; SOURCE LINE # 166
             ?C0027:
                                           ; SOURCE LINE # 167
                 E     MOV     DPTR,#handleIndicationConfirm
                       MOV     A,#01H
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 168
                                           ; SOURCE LINE # 169
                                           ; SOURCE LINE # 170
                                           ; SOURCE LINE # 171
             ?C0028:
                       RET     
             ; FUNCTION BTControlProcess (END)

             ; FUNCTION SysStatusProcess (BEGIN)
                                           ; SOURCE LINE # 174
                                           ; SOURCE LINE # 175
                                           ; SOURCE LINE # 176
                 E     MOV     DPTR,#sys_state
                       MOVX    A,@DPTR
                 R     xJNE    A,#01H,?C0029
                                           ; SOURCE LINE # 177
                 E     MOV     DPTR,#bleConnStatus
                       MOVX    A,@DPTR
                 R     xJNZ    ?C0034
                                           ; SOURCE LINE # 178
                                           ; SOURCE LINE # 179
                 E     CALL    YC_UARTWaitSendData
                                           ; SOURCE LINE # 180
                 E     CALL    YC_UARTClearBuffer
C51 COMPILER V9.01   SYSTEM                                                                04/20/2017 16:55:01 PAGE 11  

                                           ; SOURCE LINE # 181
                       MOV     DPTR,#049FEH
                       MOV     A,#01H
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 183
                 E     MOV     DPTR,#btCmdBuf
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 184
                       INC     DPTR
                       MOV     A,#020H
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 185
                       MOV     R3,#01H
                 E     MOV     R2,#HIGH btCmdBuf
                 E     MOV     R1,#LOW btCmdBuf
                 E     CALL    _BT_CmdFifoIn
                                           ; SOURCE LINE # 188
                                           ; SOURCE LINE # 189
                       RET     
             ?C0029:
                                           ; SOURCE LINE # 190
                 E     MOV     DPTR,#sys_state
                       MOVX    A,@DPTR
                 R     xJNE    A,#03H,?C0032
                                           ; SOURCE LINE # 191
                 E     CALL    YC_UARTWaitSendData
                                           ; SOURCE LINE # 192
                 E     CALL    YC_UARTClearBuffer
                                           ; SOURCE LINE # 193
                       MOV     DPTR,#049FEH
                       MOV     A,#01H
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 194
                       RET     
             ?C0032:
                                           ; SOURCE LINE # 195
                                           ; SOURCE LINE # 196
                       MOV     DPTR,#049FEH
                       CLR     A
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 197
                                           ; SOURCE LINE # 198
             ?C0034:
                       RET     
             ; FUNCTION SysStatusProcess (END)

C51 COMPILER V9.01   SYSTEM                                                                04/20/2017 16:55:01 PAGE 12  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


s8_t . . . . . . . . . . . . . . . . .  TYPEDEF  -----  CHAR     -----  1
u8_t . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
deviceInfo . . . . . . . . . . . . . .  EXTERN   XDATA  STRUCT   -----  10
UART_CardProtcol . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
YC_UARTPARAM_t . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  15
  uartCtrl . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  pRxBuff. . . . . . . . . . . . . . .  MEMBER   -----  PTR      0001H  3
  pTxBuff. . . . . . . . . . . . . . .  MEMBER   -----  PTR      0004H  3
  rxBuffLen. . . . . . . . . . . . . .  MEMBER   -----  U_INT    0007H  2
  txBuffLen. . . . . . . . . . . . . .  MEMBER   -----  U_INT    0009H  2
  baud . . . . . . . . . . . . . . . .  MEMBER   -----  U_LONG   000BH  4
YC_UARTClearBuffer . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
pxdbyte. . . . . . . . . . . . . . . .  TYPEDEF  DATA   PTR      -----  2
YC_LedBlink. . . . . . . . . . . . . .  * TAG *  -----  STRUCT   -----  6
  active_state . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  gpio_num . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  light_time . . . . . . . . . . . . .  MEMBER   -----  U_INT    0002H  2
  dark_time. . . . . . . . . . . . . .  MEMBER   -----  U_INT    0004H  2
_xmemset . . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
_generateChecksum. . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  buf. . . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0000H  3
  len. . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0005H  1
  result . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
btCmdBuf . . . . . . . . . . . . . . .  EXTERN   XDATA  STRUCT   -----  25
pdbyte . . . . . . . . . . . . . . . .  TYPEDEF  -----  PTR      -----  1
CS_Scale_PowerOn . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
UART_HalfDuplex. . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CS_Weight_T. . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  10
  origin . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0000H  2
  kg . . . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0002H  2
  lb . . . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0004H  2
  st . . . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0006H  2
  jin. . . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0008H  2
_CS_SoftTimer. . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
DFIFO0 . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0094H  1
SoftTimer_1STimerID. . . . . . . . . .  PUBLIC   XDATA  U_CHAR   0001H  1
UART_Parity. . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
DFIFO1 . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0095H  1
dbyte. . . . . . . . . . . . . . . . .  TYPEDEF  DATA   U_CHAR   -----  1
CS_ComState. . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  3
  now. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  pre. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sucess . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
DFIFO2 . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0096H  1
QueueInit. . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
pxbyte . . . . . . . . . . . . . . . .  TYPEDEF  -----  PTR      -----  2
ibyte. . . . . . . . . . . . . . . . .  TYPEDEF  IDATA  U_CHAR   -----  1
BT_EVENTFIFO . . . . . . . . . . . . .  * TAG *  -----  STRUCT   -----  25
  len. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  DATA . . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0001H  24
R_Scale_state. . . . . . . . . . . . .  EXTERN   XDATA  U_CHAR   -----  1
YC_UtilTimer . . . . . . . . . . . . .  * TAG *  -----  STRUCT   -----  61
  timer_flages . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  callback . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0001H  24
  timer_end. . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0019H  32
  last_timer . . . . . . . . . . . . .  MEMBER   -----  U_LONG   0039H  4
lxOptStatus. . . . . . . . . . . . . .  EXTERN   XDATA  U_CHAR   -----  1
C51 COMPILER V9.01   SYSTEM                                                                04/20/2017 16:55:01 PAGE 13  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


_CS_Scale_TimeOutProc. . . . . . . . .  EXTERN   CODE   PROC     -----  -----
CS_KeyScan . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
s32_t. . . . . . . . . . . . . . . . .  TYPEDEF  -----  LONG     -----  4
YC_UARTPARAM . . . . . . . . . . . . .  * TAG *  -----  STRUCT   -----  15
  uartCtrl . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  pRxBuff. . . . . . . . . . . . . . .  MEMBER   -----  PTR      0001H  3
  pTxBuff. . . . . . . . . . . . . . .  MEMBER   -----  PTR      0004H  3
  rxBuffLen. . . . . . . . . . . . . .  MEMBER   -----  U_INT    0007H  2
  txBuffLen. . . . . . . . . . . . . .  MEMBER   -----  U_INT    0009H  2
  baud . . . . . . . . . . . . . . . .  MEMBER   -----  U_LONG   000BH  4
SysStatusProcess . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
bool . . . . . . . . . . . . . . . . .  TYPEDEF  DATA   BIT      -----  1
_lxRecvDataFromApp . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
u32_t. . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_LONG   -----  4
s16_t. . . . . . . . . . . . . . . . .  TYPEDEF  -----  INT      -----  2
xbyte. . . . . . . . . . . . . . . . .  TYPEDEF  XDATA  U_CHAR   -----  1
_CS_MemoryWeightClear_Timer. . . . . .  EXTERN   CODE   PROC     -----  -----
u16_t. . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
dint . . . . . . . . . . . . . . . . .  TYPEDEF  DATA   U_INT    -----  2
notifyValueUUIDA621. . . . . . . . . .  EXTERN   XDATA  U_CHAR   -----  1
byte . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
notifyValueUUIDA625. . . . . . . . . .  EXTERN   XDATA  U_CHAR   -----  1
DeviceInfo_t . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  10
  registerFlag . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  bindFlag . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  loginFlag. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  userNum. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  deviceID . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0004H  6
SoftTimer_10mSCallback . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  count. . . . . . . . . . . . . . . .  STATIC   XDATA  U_CHAR   0000H  1
YC_UartCTRLBit_e . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
YC_UtilTimerInit . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
UART_DataLen . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
_BT_EventFifoOut . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
systemInit . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
uint . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
BT_CMDFIFO_t . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  25
  len. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  DATA . . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0001H  24
UART_BaudSet . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
_BT_CmdFifoIn. . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
handleIndicationConfirm. . . . . . . .  EXTERN   XDATA  U_CHAR   -----  1
bleConnStatus. . . . . . . . . . . . .  EXTERN   XDATA  U_CHAR   -----  1
uartTimeoutCnt . . . . . . . . . . . .  EXTERN   XDATA  U_CHAR   -----  1
SoftTimer_10msTimerID. . . . . . . . .  PUBLIC   XDATA  U_CHAR   0002H  1
YC_LedBlink_t. . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  6
  active_state . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  gpio_num . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  light_time . . . . . . . . . . . . .  MEMBER   -----  U_INT    0002H  2
  dark_time. . . . . . . . . . . . . .  MEMBER   -----  U_INT    0004H  2
YC_UARTWaitSendData. . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
BTControlProcess . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  event. . . . . . . . . . . . . . . .  AUTO     XDATA  STRUCT   0000H  25
sys_state. . . . . . . . . . . . . . .  EXTERN   XDATA  U_CHAR   -----  1
p_TimerCallback. . . . . . . . . . . .  TYPEDEF  -----  PTR      -----  3
UART_Enable. . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
HistoryList_t. . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  63
C51 COMPILER V9.01   SYSTEM                                                                04/20/2017 16:55:01 PAGE 14  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  head . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  tail . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  size . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  measureData. . . . . . . . . . . . .  MEMBER   -----  ARRAY    0003H  60
UART_EnableFlowControl . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
_YC_GPIOGetInputStatus . . . . . . . .  EXTERN   CODE   PROC     -----  -----
_SpiFlashOperator. . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
BT_CMDFIFO . . . . . . . . . . . . . .  * TAG *  -----  STRUCT   -----  25
  len. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  DATA . . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0001H  24
YC_UartCTRLBit . . . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
UserMeasureData. . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  6
  weight . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0000H  2
  UTCTime. . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0002H  4
BT_EVENTFIFO_t . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  25
  len. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  DATA . . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0001H  24
_YC_UtilTimerStartMs . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
_CS_Weight_T . . . . . . . . . . . . .  * TAG *  -----  STRUCT   -----  10
  origin . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0000H  2
  kg . . . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0002H  2
  lb . . . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0004H  2
  st . . . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0006H  2
  jin. . . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0008H  2
YC_UtilTimer_t . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  61
  timer_flages . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  callback . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0001H  24
  timer_end. . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0019H  32
  last_timer . . . . . . . . . . . . .  MEMBER   -----  U_LONG   0039H  4
_CS_ComState . . . . . . . . . . . . .  * TAG *  -----  STRUCT   -----  3
  now. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  pre. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sucess . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    561    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      3      28
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
